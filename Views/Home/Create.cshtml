@model TravelBlog.Models.Destination

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Destination</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CountryId, "CountryId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CountryId, ViewData["CountryList"] as SelectList, "-- Country --", new { @class = "form-control" })
            @* @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" }) *@
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Image">Image</label>
        <div class="col-md-10">
            <input class="form-control single-line" id="Image" name="Image" type="file" value="">
            <span class="field-validation-valid text-danger" data-valmsg-for="Image" data-valmsg-replace="true"></span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@* Client Side Validation - Also: Web.config set UnobtrusiveJavaScriptEnabled=true *@
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {

        $("input[type=submit]").click(function(e) {

            e.preventDefault();

            //var data = $("form").serialize();
            var serialized = $("form").serializeArray();
            var data = new FormData;
            $(serialized).each(function (index, obj) {
                data.append(obj.name, obj.value);
            });

            var imageFile = $("#Image").get(0).files;
            data.append('ImageFile', imageFile[0]);

            $.ajax({
                type: "POST",
                url: "/Home/Create",
                data: data,
                contentType: false,
                processData: false,
                success: function (response) {
                    window.location.href = '/';
                }
            });

            return false;
        });
    });
</script>
